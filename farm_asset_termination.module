<?php

/**
 * @file
 * Farm asset termination.
 */

declare(strict_types=1);

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\farm_asset_termination\Field\AssetTerminationItemList;

/**
 * Implements hook_entity_base_field_info().
 */
function farm_asset_termination_entity_base_field_info(EntityTypeInterface $entity_type): array {
  $fields = [];

  if ($entity_type->id() === 'asset') {
    // Asset termination time.
    // This is computed based on an asset's logs marked as termination.
    $options = [
      'type' => 'entity_reference',
      'label' => t('Terminated'),
      'computed' => AssetTerminationItemList::class,
      'target_type' => 'log',
      'multiple' => FALSE,
      'hidden' => 'form',
      'view_display_options' => [
        'label' => 'inline',
        'type' => 'asset_termination',
      ],
    ];
    $fields['termination'] = \Drupal::service('farm_field.factory')->baseFieldDefinition($options);

  }

  if ($entity_type->id() === 'log') {
    // Is termination boolean field.
    $options = [
      'type' => 'boolean',
      'label' => t('Is termination'),
      'description' => t('If this log is a termination, then all assets referenced by it will be marked as terminated and archived at the time the log takes place. The log must be complete in order for the movement to take effect.'),
      'weight' => [
        'form' => 97,
      ],
      'view_display_options' => [
        'label' => 'inline',
        'type' => 'hideable_boolean',
        'settings' => [
          'format' => 'default',
          'format_custom_false' => '',
          'format_custom_true' => '',
          'hide_if_false' => TRUE,
        ],
      ],
    ];
    $fields['is_termination'] = \Drupal::service('farm_field.factory')->baseFieldDefinition($options);
  }

  return $fields;
}
